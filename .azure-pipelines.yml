parameters:
- name: pools
  type: object
  default: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
- name: python_versions
  type: object
  default: [ "3.6", "3.7", "3.8" ]

jobs:
  - ${{ each pool in parameters.pools }}:
    - ${{ each python_version in parameters.python_versions }}:
      - job:
        displayName: ${{ format('Install on {0} with python {1}', pool, python_version) }}
        pool:
          vmImage: ${{ pool }}
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: ${{ python_version }}
          displayName: Use python version ${{ python_version }}

        - ${{ if contains(pool, 'macos') }}:
          # macos ships an older version of bash than is supported in setup.sh
          - script: brew install bash
            displayName: Upgrade bash
          # macos fails if unicorn isn't preinstalled, unsure why
          - script: pip install --pre unicorn
            displayName: Install unicorn

        # Windows setup
        - ${{ if contains(pool, 'windows') }}:
          - task: BatchScript@1
            displayName: Call vcvars64.bat
            inputs:
              filename: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
              modifyEnvironment: true
          - script: setup.bat
            displayName: Run setup.bat

        # *nix setup
        - ${{ if not(contains(pool, 'windows')) }}:
          - script: ./setup.sh -i -u
            displayName: Run setup.sh

        - script: python -c "import angr; print('angr imports!')"
          displayName: Test angr import
